class Solution {
public:
    int maximumCandies(vector<int>& candies, long long k) {
        int n = candies.size();
        long long sum = accumulate(candies.begin(),candies.end(),0LL);
        if(sum<k){
            return 0;
        }
        if(sum==k){
            return 1;
        }
        int min = *min_element(candies.begin(), candies.end());
        int maxCandy = *max_element(candies.begin(), candies.end());
        int left = 1, right = maxCandy, ans = 0;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            long long count = 0;

            for (int c : candies) {
                count += c / mid;
            }
            if (count >= k) {
                ans = mid;
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return ans;
    }
};
