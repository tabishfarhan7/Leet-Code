class Solution {
public:
  int minCapability(vector<int>& nums, int k) {
    int minVal = *min_element(nums.begin(), nums.end());
    int maxVal = *max_element(nums.begin(), nums.end());

    while (minVal < maxVal) {
      int mid = minVal + (maxVal - minVal) / 2;
      if (countStolenHouses(nums, mid) >= k)
        maxVal = mid;
      else
        minVal = mid + 1;
    }

    return minVal;
  }

private:
  int countStolenHouses(const vector<int>& nums, int capacity) {
    int stolen = 0;
    for (int i = 0; i < nums.size(); i++) {
      if (nums[i] <= capacity) {
        stolen++;
        i++; 
      }
    }
    return stolen;
  }
};
