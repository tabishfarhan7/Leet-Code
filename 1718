class Solution {
public:
    vector<int> constructDistancedSequence(int n) {
        vector<int> res(2 * n - 1);
        vector<bool> used(n + 1);
        
        function<bool(int)> dfs = [&](int i) {
            if (i == res.size()) return true;
            if (res[i]) return dfs(i + 1);
            
            for (int j = n; j > 0; --j) {
                if (used[j]) continue;
                
                res[i] = j;
                used[j] = true;
                
                if (j == 1) {
                    if (dfs(i + 1)) return true;
                } else {
                    if (i + j < res.size() && !res[i + j]) {
                        res[i + j] = j;
                        if (dfs(i + 1)) return true;
                        res[i + j] = 0;
                    }
                }
                
                res[i] = 0;
                used[j] = false;
            }
            
            return false;
        };
        
        dfs(0);
        return res;
    }
};
